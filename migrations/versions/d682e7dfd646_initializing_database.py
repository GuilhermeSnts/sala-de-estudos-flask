"""Initializing database

Revision ID: d682e7dfd646
Revises: 
Create Date: 2020-09-09 00:07:32.968038

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'd682e7dfd646'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evaluation_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Unicode(length=45), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description')
    )
    op.create_table('professors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Unicode(length=70), nullable=False),
    sa.Column('email', sa.Unicode(length=100), nullable=True),
    sa.Column('site', sa.Unicode(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.Unicode(length=8), nullable=False),
    sa.Column('name', sa.Unicode(length=70), nullable=False),
    sa.Column('type', sa.Enum('OBRIGATORIA', 'OPCIONAL', name='subjecttypeenum'), nullable=False),
    sa.Column('workload', sa.Integer(), nullable=False),
    sa.Column('amount_lessons', sa.Integer(), nullable=False),
    sa.Column('drive_link', sa.Unicode(), nullable=True),
    sa.Column('whatsapp_link', sa.Unicode(), nullable=True),
    sa.Column('github_link', sa.Unicode(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('evaluations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('GABARITO', 'QUESTOES', 'RESPOSTAS', name='evaluationtypeenum'), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('period', sa.Enum('PRIMEIRO', 'SEGUNDO', name='periodenum'), nullable=False),
    sa.Column('evaluation_key_id', sa.Integer(), nullable=False),
    sa.Column('download_link', sa.Unicode(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['evaluation_key_id'], ['evaluation_keys.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('title', sa.Unicode(length=100), nullable=True),
    sa.Column('length', sa.Time(), nullable=True),
    sa.Column('url', sa.Unicode(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professors_subjects',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professors.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('subject_id', 'professor_id')
    )
    op.create_table('professors_lessons',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['professor_id'], ['professors.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('lesson_id', 'subject_id', 'professor_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('professors_lessons')
    op.drop_table('professors_subjects')
    op.drop_table('lessons')
    op.drop_table('evaluations')
    op.drop_table('subjects')
    op.drop_table('professors')
    op.drop_table('evaluation_keys')
    # ### end Alembic commands ###
